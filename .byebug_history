exit
pi.pantry.id
pi.pantry
pi.category.name
pi.category
pi.ingredient.name
pi.ingredient
pi.measurement.name
pi.measurement
pi.measurment
Measurement.find(pi.measurement_id).name
pi.measurement
pi.quantity
pi.ingredient.name
pi.ingredient
pi
exit
pi.ingredient
pi = PantryIngredient.find_by_pantry_id_and_ingredient_id(pantry_id, ingredient_id)
PantryIngredient.find_by_pantry_id_and_ingredient_id(pantry_id, ingredient_id)
PantryIngredient.find_by(ingredient_id: ingredient_id)
PantryIngredient.find_by(pantry_id: pantry_id & ingredient_id: ingredient_id)
PantryIngredient.find_by(pantry_id: pantry_id && ingredient_id: ingredient_id)
PantryIngredient.find_by(pantry_id: pantry_id AND ingredient_id: ingredient_id)
PantryIngredient.find_by(pantry_id: pantry_id)
PantryIngredient.find_by_ingredient_id
PantryIngredient.find_by_ingredient
PantryIngredient.methods.sort
ingredient_id = Ingredient.find_by(name: params[:ingredient])
ingredient_id Ingredient.find_by(name: params[:ingredient])
pantry_id = Pantry.find(params[:pantry])
Ingredient.find_by(name: params[:ingredient])
Ingredient.find_by(name: params[:ingredient]
PantryIngredient
PantryIngredient.where(ingredient: params[:ingredient])
PantryIngredient.where(ingredient.name: params[:ingredient])
PantryIngredient.where(pantry_id: params[:pantry])
PantryIngredient.where(pantry_id: params[:pantry] AND ingredient.name: params[:ingredient])
PantryIngredient.where(pantry_id: params[:pantry_id] AND ingredient.name: params[:ingredient])
PantryIngredient.where(pantry_id: params[:pantry_id] AND ingredient: params[:ingredient])
PantryIngredient.where(pantry_id: params[:pantry_id] && ingredient: params[:ingredient])
PantryIngredient.where(pantry_id: params[:pantry_id] && ingredient.name: params[:ingredient])
PantryIngredient.first.ingredient
PantryIngredient
)
PantryIngredient.where(pantry_id: params[:pantry_id])
PantryIngredient
pantry
continue
contnue
pantry.ingredients.find_by(name: params[:ingredient])
pantry.ingredients.find_by(name: params[:ingredient]
pantry.ingredients
pantry = Pantry.find(params[:pantry])
params
exit
pantry
pantry.ingredient
pantry.ingredients
pantry = PantryIngredient.find_by(pantry_id: params[:pantry])
PantryIngredient.find_by(pantry_id: params[:pantry])
PantryIngredient.find(params[:pantry])
PantryIngredient.find(params[:pantry]
PantryIngredient
params
exit
params[:ingredient]
params
exit
params["ingredient"]
params[:ingredient]
params
exit
params
exit
params
continue
ing.measurement.name
ing.measurment.name
ing.pantry
ing.ingredient.category
ing.ingredient
ing.measurement.name
ing.measurement
ing.measuerment
ing.measurment
ing.quantity
ing.ingredient.name
ing.ingredient
ing
continue
current_pantry
Pantry.all
params[:pantryingredient][:currentPantry]
params[:pantryingredient]
params
continue
params[:pantryingredient]
params
ing
continue
measurements = Measurement.order(:name)
Measurement
Measurements
continue
ing.category
ing
params
continue
params[:category]
params
ing.ingredient.category
ing.ingredient
continue
ing.ingredient.name
ing.ingredient
ing.valid?
ing
exit
continue
exit
pi.(&:ingredient)
pi.(&:ingredients)
pi.(&:measurement)
pi(&:measurement)
pi
exit
pi.last.measurement
exit
pi.last.measurement
pi.last
exit
pi.last.measurement
pi.last.measurement_id
pi.measurement_id
pi.last
pi
pi.last.measurement
pi.last.ingredient
pi.last
pi[13]
pi.last
continue
pi.includes(:ingredient, :category)
pi.includes(:ingredient), include: ['ingredient']
pi.includes(:ingredient)
pi.includes(:ingredient), include: ['ingredient']
pi.includes(:ingredient), include: [:ingredient]
pi.includes(:ingredient, :category), includes: [:ingredient]
pi.includes(:ingredient, :category), include: [:ingredient]
pi.includes(:ingredient, :category), include: [:ingredient, :category]
pi.includes(:ingredient, :category)
exit
render json: pi.includes(:ingredient), include: [:ingredient]
continue
render json: pi.includes(:ingredient)
pi.includes(:ingredient)
pi.includes(:ingredient
continue
pantry.pantry_ingredients
pantry.pantry_ingred
pantry.pantry_ingredients
pantry.pantry_ingrediants
pantry
pi
pi[0]
pi
continue
render json: pi
pi
exit
render json: { ingredients: pi }
pi = pantry.ingredients
render json: { ingredients: pantry }
render json: { ingredients: ingredients }
pantry = Pantry.find(params[:id])
pantry.ingredients
sam.ingredients
pantry = Pantry.find(params[:id])
params
continue
ing.ingredient.category
ing.ingredient
ing.category
ing.valid?
ing.valid
ing
exit
ingredient.category = Category.find_by(name: params[:pantryingredient][:category])
ingredient.category = Category.find(name: params[:pantryingredient][:category])
ingredient
exit
iexit
Ingredient.find_or_create_by(name: params[:pantryingredient][:ingredient])
params[:pantryingredient]
continue
ing.save
ing
ing.quantity = quantity_params
inging.quantity = quantity_params
ing.quantity = params[:pantryingredient][:quantity].to_i
params[:pantryingredient][:quantity].to_i
ing
ing.quantity = 4
ing.quantity
ing
ing.quanity = quantity_params
inq.quanity = quantity_params
ing
ing.ingredient = ingredient_params
ing.measurement_id = measurement_params.id
ing.measurement.id = measurement_params.id
ing.measurement = measurement_params
continue
ing
ing.measurement_id = 4
ing.measurement_id
ing.measurement.id = 4
ing.measurement.id=
ing.measurement.id
ing.measurement
ing.measurement = 4
ing.measurement
ing.measurement = measurement_params.id
measurement_params.id
measurement_params
ing.measurement = measurement_params
PantryIngredient
measurement_params
ing.measurement
continue
ing
continue
exit
ing
PantryIngredient
Measurement
ing.measurement = Measurement.find_by(name: "Cup")
ing.measurement = Measurement.find(name: "Cup")
ing.measurement
ing
ing.measurement = Measurement.find_or_create_by(name: params[:pantryingredient][:measurement])
ing.measurement
ing
ing.quantity = params[:pantryingredient][:quantity].to_i
ing
ing.quantity = params[:pantryingredient][:quantity]
ing.quantity = params.require(:pantryingredient).permit(:quantity)
params.require(:pantryingredient).permit(:quantity)
ing
continue
Ingredient.find_or_create_by(name: params[:pantryingredient][:ingredient])
params[:pantryingredient][:ingredient]
continue
Measurement.find_or_create_by(name: params[:pantryingredient][:measurement])
ing
